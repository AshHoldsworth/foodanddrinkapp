// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using foodanddrinkapp_backend.Data;

#nullable disable

namespace foodanddrinkapp_backend.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("foodanddrinkapp_backend.Models.Consumable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Consumables");
                });

            modelBuilder.Entity("foodanddrinkapp_backend.Models.ConsumableIngredient", b =>
                {
                    b.Property<int>("ConsumableId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.HasKey("ConsumableId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("ConsumableIngredients");
                });

            modelBuilder.Entity("foodanddrinkapp_backend.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConsumableId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsumableId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("foodanddrinkapp_backend.Models.ConsumableIngredient", b =>
                {
                    b.HasOne("foodanddrinkapp_backend.Models.Consumable", "Consumable")
                        .WithMany("ConsumableIngredients")
                        .HasForeignKey("ConsumableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("foodanddrinkapp_backend.Models.Ingredient", "Ingredient")
                        .WithMany("ConsumableIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumable");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("foodanddrinkapp_backend.Models.Ingredient", b =>
                {
                    b.HasOne("foodanddrinkapp_backend.Models.Consumable", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("ConsumableId");
                });

            modelBuilder.Entity("foodanddrinkapp_backend.Models.Consumable", b =>
                {
                    b.Navigation("ConsumableIngredients");

                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("foodanddrinkapp_backend.Models.Ingredient", b =>
                {
                    b.Navigation("ConsumableIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
